/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.girginsoft.redaktor.view;

import com.girginsoft.sociolog.service.LanguageDetectorService;
import com.girginsoft.sociolog.service.SpellingCorrectionServiceEn;
import com.girginsoft.sociolog.service.SpellingCorrectionServiceTr;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author girginsoft
 */
public class Window extends javax.swing.JFrame {

    /**
     * Creates new form Window
     */
    private static SpellingCorrectionServiceTr instanceTr = SpellingCorrectionServiceTr.getInstance();
    private static SpellingCorrectionServiceEn instanceEn = SpellingCorrectionServiceEn.getInstance();
    private static LanguageDetectorService detector = LanguageDetectorService.getInstance();
    private LanguageDetectorService.LanguageModel currentLang = LanguageDetectorService.LanguageModel.TR;
    
    public Window() {
        initComponents();
        jProgressBar1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jProgressBar2 = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();

        jPopupMenu1.setComponentPopupMenu(jPopupMenu1);
        jPopupMenu1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPopupMenu1.setInvoker(jEditorPane1);
        jPopupMenu1.setName("popupMenu");
        jPopupMenu1.setOpaque(false);
        jPopupMenu1.setSelected(jEditorPane1);
        jPopupMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPopupMenu1MouseClicked(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(500, 500));

        jEditorPane1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jEditorPane1KeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jEditorPane1);

        jProgressBar2.setToolTipText("Learning...");
        jProgressBar2.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        jProgressBar2.setString("Learning...");

        jLabel1.setText("Language");

        jButton1.setText("Correct All");
        jButton1.setAlignmentY(0.0F);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jScrollPane1)
                            .add(jProgressBar2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(jLabel2)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jLabel1))
                            .add(jProgressBar1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 119, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(174, 174, 174))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jProgressBar2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jLabel2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 327, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jProgressBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(54, 54, 54))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPopupMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPopupMenu1MouseClicked
      
    }//GEN-LAST:event_jPopupMenu1MouseClicked

    private void jEditorPane1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jEditorPane1KeyTyped
        final Window win = this;
        final String keyChar = String.valueOf(evt.getKeyChar());
        //currentLang = detector.predict(jEditorPane1.getText());
        new Thread(new Runnable() {
            public void run() {
                if (keyChar.matches("[\\s\\,\\.\\:\\?\\!]")) {
                    String text = jEditorPane1.getText();
                    String[] tokens = text.split("[\\s\\,\\.\\:\\?\\!]");
                    HashMap<String, ArrayList<String>> allsug = new HashMap<String, ArrayList<String>>();
                     currentLang = detector.predict(jEditorPane1.getText());
                    if (currentLang == LanguageDetectorService.LanguageModel.TR) {
                        System.out.println("searching turkish for " + text);
                        instanceTr.predict(tokens[tokens.length - 1], allsug);
                        jLabel1.setText("Türkçe");
                    } else {
                        System.out.println("searching english for " + text);
                        instanceEn.predict(tokens[tokens.length - 1], allsug);
                        jLabel1.setText("English");
                    }
                    String suggestion = tokens[tokens.length - 1];
                    ArrayList<String> suggestions = allsug.get(suggestion);
                    System.out.println( tokens[tokens.length - 1] + " found  " + suggestions.size());
                    if (suggestions.size() == 1) {
                        suggestion = suggestions.get(0);
                    }
                     if (suggestions.size() > 1) {
                        suggestion = (String) JOptionPane.showInputDialog(win, "What is the correct form of the word " + tokens[tokens.length - 1], "Suggestions", JOptionPane.QUESTION_MESSAGE, null, suggestions.toArray(), suggestions.get(0));
                    }
                    text = jEditorPane1.getText().replace(tokens[tokens.length - 1], suggestion);
                    jEditorPane1.setText(text);
                    jEditorPane1.setCaretPosition(jEditorPane1.getDocument().getLength());
                }

            }
        }).start();

    }//GEN-LAST:event_jEditorPane1KeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        final Window win = this;    
        new Thread(new Runnable() {

            @Override
            public void run() {
                 String text = jEditorPane1.getText();
                  jProgressBar1.setValue(0);
            String[] tokens = text.split("[\\s\\,\\.\\:\\?\\!]");
            HashMap<String, ArrayList<String>> allsug = new HashMap<String, ArrayList<String>>();
              jProgressBar1.setVisible(true);
             currentLang = detector.predict(jEditorPane1.getText());
              if (currentLang == LanguageDetectorService.LanguageModel.TR) {
                     jLabel1.setText("Türkçe");
              } else {
                     jLabel1.setText("English");
             }
            int i = 100 / tokens.length;
            for (String current : tokens) {
                if (currentLang == LanguageDetectorService.LanguageModel.TR) {
                    instanceTr.predict(current, allsug);
                } else {
                    instanceEn.predict(current, allsug);
                }
                ArrayList<String> suggestions = allsug.get(current);
                if (suggestions != null && suggestions.size() == 1) {
                    text = text.replace(current, suggestions.get(0));
                } else if (suggestions != null && suggestions.size() > 1) {
                    String suggestion = (String) JOptionPane.showInputDialog(win, "What is the correct form of the word " + current, "Suggestions", JOptionPane.QUESTION_MESSAGE, null, suggestions.toArray(), suggestions.get(0));
                    text = text.replace(current, suggestion);
                }
                jProgressBar1.setValue(jProgressBar1.getValue() + i);
            }
            jProgressBar1.setValue(jProgressBar1.getValue() + i);
         
           jEditorPane1.setText(text);
           jProgressBar1.setVisible(false);
            }
        }).start();
           
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void start() {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        final Window win = new Window();   
        win.setVisible(true);
        new Thread((new Runnable() {
            
            public void run() {
              
                try {
                    System.out.println("learning english corpus");
                    win.setProgressValue(5, "Reading English Database, Learning...");
                    instanceEn.learn();
                    win.setProgressValue(25, "Reading Turkish Database, Learning...");
                    System.out.println("learning turkish corpus");
                    instanceTr.learn();
                    win.setProgressValue(65, "Learning Language Detection Database...");
                    System.out.println("learning detection corpus");
                    detector.learn();
                    win.setProgressValue(99, "Ready");
                    System.out.println("starting");
                    win.hideProgress();                         
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
                }
            

//If a string was returned, say so.

            }
        })).run();
    }
    public void hideProgress() {
        jProgressBar2.setVisible(false);
    }
    public void setProgressValue(int value, String state) {
        jProgressBar2.setValue(value);
        jLabel2.setText(state);
        //this.repaint();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JProgressBar jProgressBar2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
